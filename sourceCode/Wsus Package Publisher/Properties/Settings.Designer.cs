//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.34209
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wsus_Package_Publisher.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "12.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("en")]
        public string Language {
            get {
                return ((string)(this["Language"]));
            }
            set {
                this["Language"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("SameAsApplication")]
        public string Credential {
            get {
                return ((string)(this["Credential"]));
            }
            set {
                this["Credential"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Lime")]
        public global::System.Drawing.Color InstalledColor {
            get {
                return ((global::System.Drawing.Color)(this["InstalledColor"]));
            }
            set {
                this["InstalledColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("LawnGreen")]
        public global::System.Drawing.Color InstalledPendingRebootColor {
            get {
                return ((global::System.Drawing.Color)(this["InstalledPendingRebootColor"]));
            }
            set {
                this["InstalledPendingRebootColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("GreenYellow")]
        public global::System.Drawing.Color DownloadedColor {
            get {
                return ((global::System.Drawing.Color)(this["DownloadedColor"]));
            }
            set {
                this["DownloadedColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Khaki")]
        public global::System.Drawing.Color NotApplicableColor {
            get {
                return ((global::System.Drawing.Color)(this["NotApplicableColor"]));
            }
            set {
                this["NotApplicableColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Orange")]
        public global::System.Drawing.Color NotInstalledColor {
            get {
                return ((global::System.Drawing.Color)(this["NotInstalledColor"]));
            }
            set {
                this["NotInstalledColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("DarkOrange")]
        public global::System.Drawing.Color UnknownColor {
            get {
                return ((global::System.Drawing.Color)(this["UnknownColor"]));
            }
            set {
                this["UnknownColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("OrangeRed")]
        public global::System.Drawing.Color FailedColor {
            get {
                return ((global::System.Drawing.Color)(this["FailedColor"]));
            }
            set {
                this["FailedColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowNonLocallyPublishedUpdates {
            get {
                return ((bool)(this["ShowNonLocallyPublishedUpdates"]));
            }
            set {
                this["ShowNonLocallyPublishedUpdates"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("NotePad.exe")]
        public string OpenWindowsUpdateLogWith {
            get {
                return ((string)(this["OpenWindowsUpdateLogWith"]));
            }
            set {
                this["OpenWindowsUpdateLogWith"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool UpgradeRequired {
            get {
                return ((bool)(this["UpgradeRequired"]));
            }
            set {
                this["UpgradeRequired"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("00000000-0000-0000-0000-000000000000")]
        public global::System.Guid AppID {
            get {
                return ((global::System.Guid)(this["AppID"]));
            }
            set {
                this["AppID"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LastUpdateFolder {
            get {
                return ((string)(this["LastUpdateFolder"]));
            }
            set {
                this["LastUpdateFolder"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int UpdateFilePathSetting {
            get {
                return ((int)(this["UpdateFilePathSetting"]));
            }
            set {
                this["UpdateFilePathSetting"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool AdditionalUpdateFilePathAsMainFile {
            get {
                return ((bool)(this["AdditionalUpdateFilePathAsMainFile"]));
            }
            set {
                this["AdditionalUpdateFilePathAsMainFile"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LastUsedServerName {
            get {
                return ((string)(this["LastUsedServerName"]));
            }
            set {
                this["LastUsedServerName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ConnectToLastUsedServer {
            get {
                return ((bool)(this["ConnectToLastUsedServer"]));
            }
            set {
                this["ConnectToLastUsedServer"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool PreventAutoApproval {
            get {
                return ((bool)(this["PreventAutoApproval"]));
            }
            set {
                this["PreventAutoApproval"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string Setting {
            get {
                return ((string)(this["Setting"]));
            }
            set {
                this["Setting"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("IPv4")]
        public string PingStandard {
            get {
                return ((string)(this["PingStandard"]));
            }
            set {
                this["PingStandard"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1970-01-01")]
        public global::System.DateTime LastVersionCheck {
            get {
                return ((global::System.DateTime)(this["LastVersionCheck"]));
            }
            set {
                this["LastVersionCheck"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("ComputerName;IPAdress;LastReportedStatusTime;LastSyncTime;Make;Model;OSArchitectu" +
            "re;OSDescription")]
        public string ComputersListViewerDisplayedColumns {
            get {
                return ((string)(this["ComputersListViewerDisplayedColumns"]));
            }
            set {
                this["ComputersListViewerDisplayedColumns"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Revise")]
        public string UpdateDefaultAction {
            get {
                return ((string)(this["UpdateDefaultAction"]));
            }
            set {
                this["UpdateDefaultAction"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("NoProxy")]
        public string HTTPProxyPolicy {
            get {
                return ((string)(this["HTTPProxyPolicy"]));
            }
            set {
                this["HTTPProxyPolicy"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string HTTPProxyServerName {
            get {
                return ((string)(this["HTTPProxyServerName"]));
            }
            set {
                this["HTTPProxyServerName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string HTTPProxyLogin {
            get {
                return ((string)(this["HTTPProxyLogin"]));
            }
            set {
                this["HTTPProxyLogin"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string HTTPProxyPassword {
            get {
                return ((string)(this["HTTPProxyPassword"]));
            }
            set {
                this["HTTPProxyPassword"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("8080")]
        public int HTTPProxyPort {
            get {
                return ((int)(this["HTTPProxyPort"]));
            }
            set {
                this["HTTPProxyPort"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("SameAsAbove")]
        public string FTPProxyPolicy {
            get {
                return ((string)(this["FTPProxyPolicy"]));
            }
            set {
                this["FTPProxyPolicy"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Administrator")]
        public string RemoteAdminLogin {
            get {
                return ((string)(this["RemoteAdminLogin"]));
            }
            set {
                this["RemoteAdminLogin"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"1;0;0;0;208;140;157;223;1;21;209;17;140;122;0;192;79;194;151;235;1;0;0;0;52;137;108;74;11;85;92;71;189;105;49;64;51;134;88;223;0;0;0;0;2;0;0;0;0;0;16;102;0;0;0;1;0;0;32;0;0;0;14;66;139;132;196;135;226;69;91;159;58;41;163;76;54;249;22;130;64;118;201;44;91;190;250;252;91;194;52;7;88;131;0;0;0;0;14;128;0;0;0;2;0;0;32;0;0;0;146;240;220;122;178;111;252;222;213;218;169;147;64;210;69;116;145;36;229;36;72;244;231;164;190;206;26;43;146;235;121;2;32;0;0;0;167;3;214;235;133;161;177;141;28;163;96;10;37;73;131;82;50;83;83;143;60;77;199;80;74;245;243;238;193;34;29;221;64;0;0;0;196;127;47;215;204;122;137;204;157;224;141;202;42;157;190;227;202;150;29;39;39;52;121;204;74;25;66;15;3;94;34;232;24;72;119;122;35;129;119;219;28;219;28;49;169;172;10;234;251;233;14;57;64;65;251;0;62;113;55;37;44;254;136;106;")]
        public string RemoteAdminPassword {
            get {
                return ((string)(this["RemoteAdminPassword"]));
            }
            set {
                this["RemoteAdminPassword"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<xs:schema id=\"Applicability\" targetName" +
            "space=\"http://www.microsoft.com/msi/patch_applicability.xsd\" elementFormDefault=" +
            "\"qualified\" xmlns=\"http://www.microsoft.com/msi/patch_applicability.xsd\" xmlns:m" +
            "stns=\"http://www.microsoft.com/msi/patch_applicability.xsd\" xmlns:xs=\"http://www" +
            ".w3.org/2001/XMLSchema\">\r\n\t<xs:element name=\"MsiPatch\">\r\n\t\t<xs:complexType>\r\n\t\t\t" +
            "<xs:sequence>\r\n\t\t\t\t<xs:element name=\"TargetProduct\" minOccurs=\"1\" maxOccurs=\"unb" +
            "ounded\">\r\n\t\t\t\t\t<xs:complexType>\r\n\t\t\t\t\t\t<xs:sequence>\r\n\t\t\t\t\t\t\t<xs:element name=\"T" +
            "argetProductCode\" type=\"ValidateGUID\" />\r\n\t\t\t\t\t\t\t<xs:element name=\"UpdatedProduc" +
            "tCode\" type=\"GUID\" minOccurs=\"0\" maxOccurs=\"1\" />\r\n\t\t\t\t\t\t\t<xs:element name=\"Targ" +
            "etVersion\" type=\"ValidateVersion\" />\r\n\t\t\t\t\t\t\t<xs:element name=\"UpdatedVersion\" t" +
            "ype=\"Version\" minOccurs=\"0\" maxOccurs=\"1\" />\r\n\t\t\t\t\t\t\t<xs:element name=\"TargetLan" +
            "guage\" type=\"ValidateLanguage\" />\r\n\t\t\t\t\t\t\t<xs:element name=\"UpdatedLanguages\" ty" +
            "pe=\"intList\" />\r\n\t\t\t\t\t\t\t<xs:element name=\"UpgradeCode\" type=\"ValidateGUID\" />\r\n\t" +
            "\t\t\t\t\t</xs:sequence>\r\n\t\t\t\t\t\t<xs:attribute name=\"MinMsiVersion\" type=\"xs:int\" />\r\n" +
            "\t\t\t\t\t</xs:complexType>\r\n\t\t\t\t</xs:element>\r\n\t\t\t\t<xs:element name=\"TargetProductCo" +
            "de\" type=\"GUID\" minOccurs=\"1\" maxOccurs=\"unbounded\" />\r\n\t\t\t\t<xs:element name=\"Ob" +
            "soletedPatch\" minOccurs=\"0\" maxOccurs=\"unbounded\" type=\"GUID\" />\r\n\t\t\t\t<xs:elemen" +
            "t name=\"SequenceData\" minOccurs=\"0\" maxOccurs=\"unbounded\">\r\n\t\t\t\t\t<xs:complexType" +
            ">\r\n\t\t\t\t\t\t<xs:sequence>\r\n\t\t\t\t\t\t\t<xs:element name=\"PatchFamily\" type=\"xs:string\" /" +
            ">\r\n\t\t\t\t\t\t\t<xs:element name=\"ProductCode\" type=\"GUID\" minOccurs=\"0\" maxOccurs=\"1\"" +
            " />\r\n\t\t\t\t\t\t\t<xs:element name=\"Sequence\" type=\"Version\" />\r\n\t\t\t\t\t\t\t<xs:element na" +
            "me=\"Attributes\" type=\"xs:int\" minOccurs=\"0\" maxOccurs=\"1\" />\r\n\t\t\t\t\t\t</xs:sequenc" +
            "e>\r\n\t\t\t\t\t</xs:complexType>\r\n\t\t\t\t</xs:element>\r\n\t\t\t</xs:sequence>\r\n\t\t\t<xs:attribu" +
            "te name=\"SchemaVersion\" type=\"Version\" />\r\n\t\t\t<xs:attribute name=\"PatchGUID\" typ" +
            "e=\"GUID\" />\r\n\t\t\t<xs:attribute name=\"MinMsiVersion\" type=\"xs:int\" />\r\n           " +
            "             <xs:attribute name=\"TargetsRTM\" type=\"xs:boolean\" use=\"optional\" />" +
            "\r\n\t\t</xs:complexType>\r\n\t</xs:element>\r\n\t<xs:simpleType name=\"GUID\">\r\n\t\t<xs:restr" +
            "iction base=\"xs:string\">\r\n\t\t\t<xs:pattern value=\"\\{[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-" +
            "[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}\\}\" />\r\n\t\t</xs:restriction>\r\n\t</xs:" +
            "simpleType>\r\n\t<xs:simpleType name=\"Version\">\r\n\t\t<xs:restriction base=\"xs:string\"" +
            ">\r\n\t\t\t<xs:pattern value=\"[0-9]{1,5}(\\.[0-9]{1,5}){0,3}\" />\r\n\t\t</xs:restriction>\r" +
            "\n\t</xs:simpleType>\r\n\t<xs:complexType name=\"ValidateGUID\">\r\n\t\t<xs:simpleContent>\r" +
            "\n\t\t\t<xs:extension base=\"GUID\">\r\n\t\t\t\t<xs:attribute name=\"Validate\" type=\"xs:boole" +
            "an\" />\r\n\t\t\t</xs:extension>\r\n\t\t</xs:simpleContent>\r\n\t</xs:complexType>\r\n\t<xs:comp" +
            "lexType name=\"ValidateVersion\">\r\n\t\t<xs:simpleContent>\r\n\t\t\t<xs:extension base=\"Ve" +
            "rsion\">\r\n\t\t\t\t<xs:attribute name=\"ComparisonType\">\r\n\t\t\t\t\t<xs:simpleType>\r\n\t\t\t\t\t\t<" +
            "xs:restriction base=\"xs:string\">\r\n\t\t\t\t\t\t\t<xs:enumeration value=\"LessThan\" />\r\n\t\t" +
            "\t\t\t\t\t<xs:enumeration value=\"LessThanOrEqual\" />\r\n\t\t\t\t\t\t\t<xs:enumeration value=\"E" +
            "qual\" />\r\n\t\t\t\t\t\t\t<xs:enumeration value=\"GreaterThanOrEqual\" />\r\n\t\t\t\t\t\t\t<xs:enume" +
            "ration value=\"GreaterThan\" />\r\n\t\t\t\t\t\t\t<xs:enumeration value=\"None\" />\r\n\t\t\t\t\t\t</x" +
            "s:restriction>\r\n\t\t\t\t\t</xs:simpleType>\r\n\t\t\t\t</xs:attribute>\r\n\t\t\t\t<xs:attribute na" +
            "me=\"ComparisonFilter\">\r\n\t\t\t\t\t<xs:simpleType>\r\n\t\t\t\t\t\t<xs:restriction base=\"xs:str" +
            "ing\">\r\n\t\t\t\t\t\t\t<xs:enumeration value=\"Major\" />\r\n\t\t\t\t\t\t\t<xs:enumeration value=\"Ma" +
            "jorMinor\" />\r\n\t\t\t\t\t\t\t<xs:enumeration value=\"MajorMinorUpdate\" />\r\n\t\t\t\t\t\t\t<xs:enu" +
            "meration value=\"None\" />\r\n\t\t\t\t\t\t</xs:restriction>\r\n\t\t\t\t\t</xs:simpleType>\r\n\t\t\t\t</" +
            "xs:attribute>\r\n\t\t\t\t<xs:attribute name=\"Validate\" type=\"xs:boolean\" />\r\n\t\t\t</xs:e" +
            "xtension>\r\n\t\t</xs:simpleContent>\r\n\t</xs:complexType>\r\n\t<xs:complexType name=\"Val" +
            "idateLanguage\">\r\n\t\t<xs:simpleContent>\r\n\t\t\t<xs:extension base=\"xs:int\">\r\n\t\t\t\t<xs:" +
            "attribute name=\"Validate\" type=\"xs:boolean\" />\r\n\t\t\t</xs:extension>\r\n\t\t</xs:simpl" +
            "eContent>\r\n\t</xs:complexType>\r\n\t<xs:simpleType name=\"intList\">\r\n\t\t<xs:list itemT" +
            "ype=\"xs:int\" />\r\n\t</xs:simpleType>\r\n\r\n    <xs:simpleType name=\"MsiType\">\r\n      " +
            "  <xs:annotation>\r\n            <xs:documentation>An enumeration defining the tar" +
            "get type of an MSI operation. </xs:documentation>\r\n        </xs:annotation>\r\n   " +
            "     <xs:restriction base=\"xs:token\">\r\n            <xs:enumeration value=\"MsiPro" +
            "duct\" />\r\n            <xs:enumeration value=\"MsiPatch\" />\r\n        </xs:restrict" +
            "ion>\r\n    </xs:simpleType>\r\n\r\n    <xs:complexType name=\"RepairPath\">\r\n    \t<xs:a" +
            "nnotation>\r\n            <xs:documentation>Representation of a MSI repair path fo" +
            "r an arbitrary GUID and type. </xs:documentation>\r\n        </xs:annotation>\r\n   " +
            "         <xs:attribute name=\"TargetId\" type=\"GUID\" use=\"required\">\r\n            " +
            "    <xs:annotation>\r\n                    <xs:documentation>Indicates the target " +
            "ProductCode or PatchCode of the repair path. </xs:documentation>\r\n              " +
            "  </xs:annotation>\r\n            </xs:attribute>\r\n            <xs:attribute name=" +
            "\"TargetType\" type=\"MsiType\" use=\"optional\" default=\"MsiProduct\">\r\n              " +
            "  <xs:annotation>\r\n                    <xs:documentation>Indicates whether the G" +
            "UID referenced by TargetGUID is for a MSI Product or MSP Patch.</xs:documentatio" +
            "n>\r\n                </xs:annotation>\r\n            </xs:attribute>\r\n            <" +
            "xs:attribute name=\"RelativePathToExe\" type=\"xs:string\" use=\"required\">\r\n        " +
            "        <xs:annotation>\r\n                    <xs:documentation>Indicates the rel" +
            "ative path with file name of this Msi to its setup exe.</xs:documentation>\r\n    " +
            "            </xs:annotation>\r\n            </xs:attribute>\r\n    </xs:complexType>" +
            "\r\n</xs:schema>")]
        public string XmlSchema {
            get {
                return ((string)(this["XmlSchema"]));
            }
            set {
                this["XmlSchema"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string PersonalizedRebootMessage {
            get {
                return ((string)(this["PersonalizedRebootMessage"]));
            }
            set {
                this["PersonalizedRebootMessage"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowOnlineComputersOnly {
            get {
                return ((bool)(this["ShowOnlineComputersOnly"]));
            }
            set {
                this["ShowOnlineComputersOnly"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IgnoreVersionMismatch {
            get {
                return ((bool)(this["IgnoreVersionMismatch"]));
            }
            set {
                this["IgnoreVersionMismatch"] = value;
            }
        }
    }
}
